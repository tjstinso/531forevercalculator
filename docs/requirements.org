#+Title: 531
* Overview
The goal of this application is to provide a calculator for the weight lifting program 531 and specifically using the 531 forever system.
* Program Breakdown [9/9]
1. [X] As a user I should be able to input my 1rm for all of the 4 main lifts in 531
2. [ ] given a 1rm, I should be able to calculate my training max
3. [ ] my training max should be something in the range of 80-90% of my 1rm.
   1. [ ] this should be user configurable
4. [X] the calculator should be able to produce a training block
5. [X] a training block consists of X cycles. Where X = Y Anchors cycles + Y Leader cycles
6. [X] Each cycle has some sort of supplemental work associated to it. For example, it should use one of the schemes like FSL, SSL, or BBB
   - [X] FSL implemented
   - [X] SSL implemented
   - [X] BBB implemented
7. [X] Between each cycle, it is expected that upper body movements increment their TM by 5 pounds and lower body movements increment their TM by 10 pounds.
8. [X] Between Leader and Anchor cycles, we should perform a 7th week protocol that uses the same TM as the previous cycle. This is typically a deload.
9. [X] The last week of the block should also be a 7th week protocol. This will also serve as a deload, but will use the TM of the first cycle in the next training block.
10. [X] users should be able to decide on conventional 531 or 5s progression
11. [X] week progression may be one of 5/3/1 or 3/5/1
    - [X] 5/3/1 implemented
    - [X] 3/5/1 implemented
* Functional Requirements
1. The program must have logic to produce a training block that follows the rules described above.
2. From the user's perspective, the portal should be a website where the user may input their data.
3. The output-or final training block- should be rendered on the website as a table
4. This output should be exportable as a CSV
* UI Design
** *1. Input Section (User Data & Configuration)*  
*Purpose*: Capture essential user data and program configuration.  
*Layout*:  
- *Input Fields*:  
  - *Training Experience* (e.g., "Beginner", "Intermediate", "Advanced")  
  - *Current TM* for major lifts.
  - *Training Phases*

- *Configuration Options*:
  - *Workout Template* 5/3/1, 3/5/1, 5s pros
  - number of leaders 
  - number of anchors
  - *Include Recovery Weeks*

*Design Notes*:  
- Use *labels* and *hints* to guide users (e.g., "Enter current 1RM in kg").  
- Use *dropdowns* for categorical data (e.g., "Training Experience").  
- Use *sliders or input ranges* for percentage-based adjustments (e.g., "Target % of 1RM").  
** *2. Output Table (Weekly Lift Plan)*  
*Purpose*: Display the calculated workout plan as a table.  
*Columns*:  
- *Lift Name* (e.g., Squat, Bench Press, Deadlift)  
*Rows*:  
- *Week Number* (e.g., Week 1, Week 2)  
- *Notes* (e.g., week 1, 2, Deload week, etc)  
*Cells*: 
- *Weight (kg/lbs) and reps*  
- *Reps* (e.g., 5x5, 10x10)  

*Design Notes*:  
- Use a *responsive table* (scrollable for large data).  
- Highlight *deload weeks* or *progressive overload* with color or icons.  
- Include *summaries* (e.g., "Total volume for this cycle").  
** *3. Export to CSV*  
*Purpose*: Allow users to download the plan as a CSV file.  
*Button*: "Download CSV"  
*Behavior*:  
- Convert the table to CSV format (headers + rows).  
- Save as "531_Workout_Plan_YYYY-MM-DD.csv".  

*Design Notes*:  
- Use a *download icon* or "Export" button in the header.  
- Ensure CSV headers match the table columns (e.g., "Lift", "Weight", "Reps").  
** *4. Optional UI Enhancements*  
- *Progress Visualization*: A line chart for tracking load progression over weeks.  
- *Customization Panel*: Toggle between "Strength" and "Size" modes.  
- *Error Handling or data sanitization*: Display alerts for invalid inputs (e.g., "Please enter a valid 1RM").  
